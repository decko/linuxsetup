- include_vars: "secret.yml"

- name: "installs deluge && python-pip"
  apt:
    name={{ item }}
    state=present
    update_cache=true
    cache_valid_time=86400
  with_items:
    - python-pip
    - libsqlite3-dev # needed by flexget
    - deluged
    - deluge-web
    - deluge-console
  notify:
    - restart deluge

- file: path=/home/renan/.config/deluge state=directory owner=renan group=renan
- name: "set deluge auth config file"
  copy:
    content="{{ deluge_auth }}\n"
    dest=/var/lib/deluged/config/auth
    mode=0600
    owner=debian-deluged
    group=debian-deluged
  notify:
    - restart deluge

- name: "set deluge core.conf file"
  template:
    src=core.conf
    dest=/var/lib/deluged/config/authcore.conf
    mode=0600
    owner=debian-deluged
    group=debian-deluged
  notify:
    - restart deluge

- name: "add deluge{-web,d}.service"
  copy:
    src=lib/systemd/system/{{ item }}
    dest=/lib/systemd/system/{{ item }}
  with_items:
    - deluge-web.service
    - deluged.service
  notify:
    - systemd reload
    - restart deluge

- name: "check if flexget is installed"
  shell: pip list | grep -i FlexGet
  register: flexget_presence
  changed_when: false
  failed_when: false

- name: "install flexget"
  command: pip install flexget
  when: flexget_presence.rc != 0

- file: path={{ deluge_autoadd_path }} state=directory owner=renan group=renan
- file: path="/home/renan/.flexget" state=directory owner=renan group=renan
- name: "copy flexget config"
  template:
    src=flexget-config.yml
    dest=/home/renan/.flexget/config.yml
    owner=renan
    mode=0600

- name: "setup a cronjob for flexget"
  cron:
    job="/usr/local/bin/flexget --cron execute"
    name="flexget download torrents"
    minute="*/30"
    user="renan"
    state="present"

- name: "copy torrent rar extract script"
  template:
    src=rar-torrent-extract
    dest=/usr/local/bin/rar-torrent-extract
    mode=755

- name: "setup a cronjob for file extract"
  cron:
    job="/usr/local/bin/rar-torrent-extract"
    name="extract rar torrents"
    minute="*/30"
    user="renan"
    state="present"

- name: "enable deluged & deluge-web"
  service:
    name="{{ item }}"
    enabled="yes"
    state="started"
  with_items:
    - deluged
    - deluge-web
  notify:
    - systemd reload
